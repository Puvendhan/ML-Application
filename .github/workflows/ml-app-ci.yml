name: MLAPP - Build and Test

on:
  push:
    branches:
      - main
  pull_request:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/ml-api

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '400.0.0'

      - name: Authenticate with Google Cloud
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" > $HOME/gcloud-key.json
          gcloud auth activate-service-account --key-file=$HOME/gcloud-key.json
          # Set the environment variable for ADC
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud-key.json" >> $GITHUB_ENV  

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Set PYTHONPATH for pytest
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run unit tests
        run: pytest tests/unit

      - name: Run integration tests
        run: pytest tests/integration

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker to use GCR
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE:$GITHUB_SHA .
          docker push $IMAGE:$GITHUB_SHA
